{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from '@stdlib/array-base-resolve-getter';\n\n\n// MAIN //\n\n/**\n* Zips one or more arrays to an array of objects.\n*\n* ## Notes\n*\n* -   The function assumes that the list of arrays to be zipped all have the same length.\n* -   The list of provided array labels should equal the number of arrays to be zipped.\n*\n* @param {Collection<Collection>} arrays - list of arrays to be zipped\n* @param {ArrayLikeObject<string>} labels - list of array labels\n* @returns {Array<Object>} output array\n*\n* @example\n* var x = [ 1, 2, 3 ];\n* var y = [ 'a', 'b', 'c' ];\n*\n* var labels = [ 'x', 'y' ];\n*\n* var z = zip2objects( [ x, y ], labels );\n* // returns [ { 'x': 1, 'y': 'a' }, { 'x': 2, 'y': 'b' }, { 'x': 3, 'y': 'c' } ]\n*/\nfunction zip2objects( arrays, labels ) {\n\tvar getters;\n\tvar keys;\n\tvar get;\n\tvar out;\n\tvar obj;\n\tvar M;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tM = arrays.length;\n\tif ( M < 1 ) {\n\t\treturn [];\n\t}\n\tN = arrays[ 0 ].length;\n\tif ( N < 1 ) {\n\t\treturn [];\n\t}\n\tgetters = [];\n\n\tget = resolveGetter( labels );\n\tkeys = [];\n\tfor ( j = 0; j < M; j++ ) {\n\t\tgetters.push( resolveGetter( arrays[ j ] ) );\n\t\tkeys.push( get( labels, j ) );\n\t}\n\tout = [];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tobj = {};\n\t\tfor ( j = 0; j < M; j++ ) {\n\t\t\tobj[ keys[ j ] ] = getters[ j ]( arrays[ j ], i );\n\t\t}\n\t\tout.push( obj );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default zip2objects;\n"],"names":["zip2objects","arrays","labels","getters","keys","get","out","obj","M","N","i","j","length","resolveGetter","push"],"mappings":";;oGAgDA,SAASA,EAAaC,EAAQC,GAC7B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGJ,IADAH,EAAIP,EAAOW,QACF,EACR,MAAO,GAGR,IADAH,EAAIR,EAAQ,GAAIW,QACP,EACR,MAAO,GAMR,IAJAT,EAAU,GAEVE,EAAMQ,EAAeX,GACrBE,EAAO,GACDO,EAAI,EAAGA,EAAIH,EAAGG,IACnBR,EAAQW,KAAMD,EAAeZ,EAAQU,KACrCP,EAAKU,KAAMT,EAAKH,EAAQS,IAGzB,IADAL,EAAM,GACAI,EAAI,EAAGA,EAAID,EAAGC,IAAM,CAEzB,IADAH,EAAM,CAAA,EACAI,EAAI,EAAGA,EAAIH,EAAGG,IACnBJ,EAAKH,EAAMO,IAAQR,EAASQ,GAAKV,EAAQU,GAAKD,GAE/CJ,EAAIQ,KAAMP,EACV,CACD,OAAOD,CACR"}